circuit OpenMips :
  module PC_reg :
    input clock : Clock
    input reset : Reset
    output io : { pc : UInt<32>, ce : UInt<1>}

    reg pcr : UInt<32>, clock with :
      reset => (UInt<1>("h0"), pcr) @[PC_reg.scala 13:16]
    reg cer : UInt<1>, clock with :
      reset => (UInt<1>("h0"), cer) @[PC_reg.scala 14:16]
    io.pc <= pcr @[PC_reg.scala 16:9]
    io.ce <= cer @[PC_reg.scala 17:9]
    node _T = asUInt(reset) @[PC_reg.scala 19:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[PC_reg.scala 19:21]
    when _T_1 : @[PC_reg.scala 19:36]
      cer <= UInt<1>("h0") @[PC_reg.scala 20:9]
    else :
      cer <= UInt<1>("h1") @[PC_reg.scala 22:9]
    node _T_2 = eq(cer, UInt<1>("h0")) @[PC_reg.scala 24:12]
    when _T_2 : @[PC_reg.scala 24:29]
      pcr <= UInt<1>("h0") @[PC_reg.scala 25:9]
    else :
      node _pcr_T = add(pcr, UInt<3>("h4")) @[PC_reg.scala 27:16]
      node _pcr_T_1 = tail(_pcr_T, 1) @[PC_reg.scala 27:16]
      pcr <= _pcr_T_1 @[PC_reg.scala 27:9]

  module Id :
    input clock : Clock
    input reset : Reset
    output io : { flip pc_i : UInt<32>, flip inst_i : UInt<32>, flip reg1_data_i : UInt<32>, flip reg2_data_i : UInt<32>, reg1_read_o : UInt<1>, reg2_read_o : UInt<1>, reg1_addr_o : UInt<5>, reg2_addr_o : UInt<5>, aluop_o : UInt<8>, alusel_o : UInt<3>, reg1_o : UInt<32>, reg2_o : UInt<32>, wd_o : UInt<5>, wreg_o : UInt<1>}

    reg reg1_read_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg1_read_or) @[Id.scala 33:25]
    reg reg2_read_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg2_read_or) @[Id.scala 34:25]
    reg reg1_addr_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), reg1_addr_or) @[Id.scala 35:25]
    reg reg2_addr_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), reg2_addr_or) @[Id.scala 36:25]
    reg aluop_or : UInt<8>, clock with :
      reset => (UInt<1>("h0"), aluop_or) @[Id.scala 37:21]
    reg alusel_or : UInt<3>, clock with :
      reset => (UInt<1>("h0"), alusel_or) @[Id.scala 38:22]
    reg reg1_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg1_or) @[Id.scala 39:20]
    reg reg2_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg2_or) @[Id.scala 40:20]
    reg wd_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wd_or) @[Id.scala 41:18]
    reg wreg_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wreg_or) @[Id.scala 42:20]
    io.reg1_read_o <= reg1_read_or @[Id.scala 44:18]
    io.reg2_read_o <= reg2_read_or @[Id.scala 45:18]
    io.reg1_addr_o <= reg1_addr_or @[Id.scala 46:18]
    io.reg2_addr_o <= reg2_addr_or @[Id.scala 47:18]
    io.aluop_o <= aluop_or @[Id.scala 48:14]
    io.alusel_o <= alusel_or @[Id.scala 49:15]
    io.reg1_o <= reg1_or @[Id.scala 50:13]
    io.reg2_o <= reg2_or @[Id.scala 51:13]
    io.wd_o <= wd_or @[Id.scala 52:11]
    io.wreg_o <= wreg_or @[Id.scala 53:13]
    wire op : UInt<6> @[Id.scala 56:16]
    wire op2 : UInt<5> @[Id.scala 57:17]
    wire op3 : UInt<6> @[Id.scala 58:17]
    wire op4 : UInt<5> @[Id.scala 59:17]
    node _op_T = bits(io.inst_i, 31, 26) @[Id.scala 60:18]
    op <= _op_T @[Id.scala 60:6]
    node _op2_T = bits(io.inst_i, 10, 6) @[Id.scala 61:19]
    op2 <= _op2_T @[Id.scala 61:7]
    node _op3_T = bits(io.inst_i, 5, 0) @[Id.scala 62:19]
    op3 <= _op3_T @[Id.scala 62:7]
    node _op4_T = bits(io.inst_i, 20, 16) @[Id.scala 63:19]
    op4 <= _op4_T @[Id.scala 63:7]
    reg imm : UInt<32>, clock with :
      reset => (UInt<1>("h0"), imm) @[Id.scala 66:16]
    reg instvalid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), instvalid) @[Id.scala 69:22]
    node _T = asUInt(reset) @[Id.scala 72:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Id.scala 72:21]
    when _T_1 : @[Id.scala 72:36]
      aluop_or <= UInt<8>("h0") @[Id.scala 73:14]
      alusel_or <= UInt<3>("h0") @[Id.scala 74:15]
      wd_or <= UInt<5>("h0") @[Id.scala 75:11]
      wreg_or <= UInt<1>("h0") @[Id.scala 76:13]
      instvalid <= UInt<1>("h1") @[Id.scala 77:15]
      reg1_read_or <= UInt<1>("h0") @[Id.scala 78:18]
      reg2_read_or <= UInt<1>("h0") @[Id.scala 79:18]
      reg1_addr_or <= UInt<5>("h0") @[Id.scala 80:18]
      reg2_addr_or <= UInt<5>("h0") @[Id.scala 81:18]
      imm <= UInt<1>("h0") @[Id.scala 82:9]
    else :
      aluop_or <= UInt<8>("h0") @[Id.scala 84:14]
      alusel_or <= UInt<3>("h0") @[Id.scala 85:15]
      node _wd_or_T = bits(io.inst_i, 15, 11) @[Id.scala 86:23]
      wd_or <= _wd_or_T @[Id.scala 86:11]
      wreg_or <= UInt<1>("h0") @[Id.scala 87:13]
      instvalid <= UInt<1>("h1") @[Id.scala 88:15]
      reg1_read_or <= UInt<1>("h0") @[Id.scala 89:18]
      reg2_read_or <= UInt<1>("h0") @[Id.scala 90:18]
      node _reg1_addr_or_T = bits(io.inst_i, 25, 21) @[Id.scala 91:30]
      reg1_addr_or <= _reg1_addr_or_T @[Id.scala 91:18]
      node _reg2_addr_or_T = bits(io.inst_i, 20, 16) @[Id.scala 92:30]
      reg2_addr_or <= _reg2_addr_or_T @[Id.scala 92:18]
      imm <= UInt<1>("h0") @[Id.scala 93:9]
      node _T_2 = eq(UInt<6>("h0"), op) @[Id.scala 95:16]
      when _T_2 : @[Id.scala 95:16]
        node _T_3 = eq(UInt<5>("h0"), op2) @[Id.scala 97:21]
        when _T_3 : @[Id.scala 97:21]
          node _T_4 = eq(UInt<6>("h25"), op3) @[Id.scala 99:25]
          when _T_4 : @[Id.scala 99:25]
            wreg_or <= UInt<1>("h1") @[Id.scala 101:25]
            aluop_or <= UInt<8>("h25") @[Id.scala 102:26]
            alusel_or <= UInt<3>("h1") @[Id.scala 103:27]
            reg1_read_or <= UInt<1>("h1") @[Id.scala 104:30]
            reg2_read_or <= UInt<1>("h1") @[Id.scala 105:30]
            instvalid <= UInt<1>("h0") @[Id.scala 106:27]
          else :
            node _T_5 = eq(UInt<6>("h24"), op3) @[Id.scala 99:25]
            when _T_5 : @[Id.scala 99:25]
              wreg_or <= UInt<1>("h1") @[Id.scala 109:25]
              aluop_or <= UInt<8>("h24") @[Id.scala 110:26]
              alusel_or <= UInt<3>("h1") @[Id.scala 111:27]
              reg1_read_or <= UInt<1>("h1") @[Id.scala 112:30]
              reg2_read_or <= UInt<1>("h1") @[Id.scala 113:30]
              instvalid <= UInt<1>("h0") @[Id.scala 114:27]
            else :
              node _T_6 = eq(UInt<6>("h26"), op3) @[Id.scala 99:25]
              when _T_6 : @[Id.scala 99:25]
                wreg_or <= UInt<1>("h1") @[Id.scala 117:25]
                aluop_or <= UInt<8>("h26") @[Id.scala 118:26]
                alusel_or <= UInt<3>("h1") @[Id.scala 119:27]
                reg1_read_or <= UInt<1>("h1") @[Id.scala 120:30]
                reg2_read_or <= UInt<1>("h1") @[Id.scala 121:30]
                instvalid <= UInt<1>("h0") @[Id.scala 122:27]
              else :
                node _T_7 = eq(UInt<6>("h27"), op3) @[Id.scala 99:25]
                when _T_7 : @[Id.scala 99:25]
                  wreg_or <= UInt<1>("h1") @[Id.scala 125:25]
                  aluop_or <= UInt<8>("h27") @[Id.scala 126:26]
                  alusel_or <= UInt<3>("h1") @[Id.scala 127:27]
                  reg1_read_or <= UInt<1>("h1") @[Id.scala 128:30]
                  reg2_read_or <= UInt<1>("h1") @[Id.scala 129:30]
                  instvalid <= UInt<1>("h0") @[Id.scala 130:27]
                else :
                  node _T_8 = eq(UInt<6>("h4"), op3) @[Id.scala 99:25]
                  when _T_8 : @[Id.scala 99:25]
                    wreg_or <= UInt<1>("h1") @[Id.scala 133:25]
                    aluop_or <= UInt<8>("h7c") @[Id.scala 134:26]
                    alusel_or <= UInt<3>("h2") @[Id.scala 135:27]
                    reg1_read_or <= UInt<1>("h1") @[Id.scala 136:30]
                    reg2_read_or <= UInt<1>("h1") @[Id.scala 137:30]
                    instvalid <= UInt<1>("h0") @[Id.scala 138:27]
                  else :
                    node _T_9 = eq(UInt<6>("h6"), op3) @[Id.scala 99:25]
                    when _T_9 : @[Id.scala 99:25]
                      wreg_or <= UInt<1>("h1") @[Id.scala 141:25]
                      aluop_or <= UInt<8>("h2") @[Id.scala 142:26]
                      alusel_or <= UInt<3>("h2") @[Id.scala 143:27]
                      reg1_read_or <= UInt<1>("h1") @[Id.scala 144:30]
                      reg2_read_or <= UInt<1>("h1") @[Id.scala 145:30]
                      instvalid <= UInt<1>("h0") @[Id.scala 146:27]
                    else :
                      node _T_10 = eq(UInt<6>("h7"), op3) @[Id.scala 99:25]
                      when _T_10 : @[Id.scala 99:25]
                        wreg_or <= UInt<1>("h1") @[Id.scala 149:25]
                        aluop_or <= UInt<8>("h3") @[Id.scala 150:26]
                        alusel_or <= UInt<3>("h2") @[Id.scala 151:27]
                        reg1_read_or <= UInt<1>("h1") @[Id.scala 152:30]
                        reg2_read_or <= UInt<1>("h1") @[Id.scala 153:30]
                        instvalid <= UInt<1>("h0") @[Id.scala 154:27]
                      else :
                        node _T_11 = eq(UInt<6>("hf"), op3) @[Id.scala 99:25]
                        when _T_11 : @[Id.scala 99:25]
                          wreg_or <= UInt<1>("h0") @[Id.scala 157:25]
                          aluop_or <= UInt<8>("h2") @[Id.scala 158:26]
                          alusel_or <= UInt<3>("h0") @[Id.scala 159:27]
                          reg1_read_or <= UInt<1>("h0") @[Id.scala 160:30]
                          reg2_read_or <= UInt<1>("h1") @[Id.scala 161:30]
                          instvalid <= UInt<1>("h0") @[Id.scala 162:27]
                        else :
                          node _T_12 = eq(UInt<6>("h10"), op3) @[Id.scala 99:25]
                          when _T_12 : @[Id.scala 99:25]
                            wreg_or <= UInt<1>("h1") @[Id.scala 165:25]
                            aluop_or <= UInt<8>("h10") @[Id.scala 166:26]
                            alusel_or <= UInt<3>("h3") @[Id.scala 167:27]
                            reg1_read_or <= UInt<1>("h0") @[Id.scala 168:30]
                            reg2_read_or <= UInt<1>("h0") @[Id.scala 169:30]
                            instvalid <= UInt<1>("h0") @[Id.scala 170:27]
                          else :
                            node _T_13 = eq(UInt<6>("h12"), op3) @[Id.scala 99:25]
                            when _T_13 : @[Id.scala 99:25]
                              wreg_or <= UInt<1>("h1") @[Id.scala 173:25]
                              aluop_or <= UInt<8>("h12") @[Id.scala 174:26]
                              alusel_or <= UInt<3>("h3") @[Id.scala 175:27]
                              reg1_read_or <= UInt<1>("h0") @[Id.scala 176:30]
                              reg2_read_or <= UInt<1>("h0") @[Id.scala 177:30]
                              instvalid <= UInt<1>("h0") @[Id.scala 178:27]
                            else :
                              node _T_14 = eq(UInt<6>("h11"), op3) @[Id.scala 99:25]
                              when _T_14 : @[Id.scala 99:25]
                                wreg_or <= UInt<1>("h0") @[Id.scala 181:25]
                                aluop_or <= UInt<8>("h11") @[Id.scala 182:26]
                                reg1_read_or <= UInt<1>("h1") @[Id.scala 183:30]
                                reg2_read_or <= UInt<1>("h0") @[Id.scala 184:30]
                                instvalid <= UInt<1>("h0") @[Id.scala 185:27]
                              else :
                                node _T_15 = eq(UInt<6>("h13"), op3) @[Id.scala 99:25]
                                when _T_15 : @[Id.scala 99:25]
                                  wreg_or <= UInt<1>("h0") @[Id.scala 188:25]
                                  aluop_or <= UInt<8>("h13") @[Id.scala 189:26]
                                  reg1_read_or <= UInt<1>("h1") @[Id.scala 190:30]
                                  reg2_read_or <= UInt<1>("h0") @[Id.scala 191:30]
                                  instvalid <= UInt<1>("h0") @[Id.scala 192:27]
                                else :
                                  node _T_16 = eq(UInt<6>("hb"), op3) @[Id.scala 99:25]
                                  when _T_16 : @[Id.scala 99:25]
                                    aluop_or <= UInt<8>("hb") @[Id.scala 195:26]
                                    alusel_or <= UInt<3>("h3") @[Id.scala 196:27]
                                    reg1_read_or <= UInt<1>("h1") @[Id.scala 197:30]
                                    reg2_read_or <= UInt<1>("h1") @[Id.scala 198:30]
                                    instvalid <= UInt<1>("h0") @[Id.scala 199:27]
                                    node _T_17 = eq(reg2_or, UInt<1>("h0")) @[Id.scala 200:30]
                                    when _T_17 : @[Id.scala 200:44]
                                      wreg_or <= UInt<1>("h1") @[Id.scala 202:27]
                                    else :
                                      wreg_or <= UInt<1>("h0") @[Id.scala 204:27]
                                  else :
                                    node _T_18 = eq(UInt<6>("ha"), op3) @[Id.scala 99:25]
                                    when _T_18 : @[Id.scala 99:25]
                                      aluop_or <= UInt<8>("ha") @[Id.scala 208:26]
                                      alusel_or <= UInt<3>("h3") @[Id.scala 209:27]
                                      reg1_read_or <= UInt<1>("h1") @[Id.scala 210:30]
                                      reg2_read_or <= UInt<1>("h1") @[Id.scala 211:30]
                                      instvalid <= UInt<1>("h0") @[Id.scala 212:27]
                                      node _T_19 = eq(reg2_or, UInt<1>("h0")) @[Id.scala 213:30]
                                      when _T_19 : @[Id.scala 213:44]
                                        wreg_or <= UInt<1>("h1") @[Id.scala 215:27]
                                      else :
                                        wreg_or <= UInt<1>("h0") @[Id.scala 217:27]
      else :
        node _T_20 = eq(UInt<6>("hd"), op) @[Id.scala 95:16]
        when _T_20 : @[Id.scala 95:16]
          wreg_or <= UInt<1>("h1") @[Id.scala 225:17]
          aluop_or <= UInt<8>("h25") @[Id.scala 227:18]
          alusel_or <= UInt<3>("h1") @[Id.scala 229:19]
          reg1_read_or <= UInt<1>("h1") @[Id.scala 231:22]
          reg2_read_or <= UInt<1>("h0") @[Id.scala 233:22]
          node _imm_T = bits(io.inst_i, 15, 0) @[Id.scala 235:40]
          node _imm_T_1 = cat(UInt<16>("h0"), _imm_T) @[Cat.scala 33:92]
          imm <= _imm_T_1 @[Id.scala 235:13]
          node _wd_or_T_1 = bits(io.inst_i, 20, 16) @[Id.scala 237:27]
          wd_or <= _wd_or_T_1 @[Id.scala 237:15]
          instvalid <= UInt<1>("h0") @[Id.scala 239:19]
        else :
          node _T_21 = eq(UInt<6>("hc"), op) @[Id.scala 95:16]
          when _T_21 : @[Id.scala 95:16]
            wreg_or <= UInt<1>("h1") @[Id.scala 242:17]
            aluop_or <= UInt<8>("h24") @[Id.scala 243:18]
            alusel_or <= UInt<3>("h1") @[Id.scala 244:19]
            reg1_read_or <= UInt<1>("h1") @[Id.scala 245:22]
            reg2_read_or <= UInt<1>("h0") @[Id.scala 246:22]
            node _imm_T_2 = bits(io.inst_i, 15, 0) @[Id.scala 247:40]
            node _imm_T_3 = cat(UInt<16>("h0"), _imm_T_2) @[Cat.scala 33:92]
            imm <= _imm_T_3 @[Id.scala 247:13]
            node _wd_or_T_2 = bits(io.inst_i, 20, 16) @[Id.scala 248:27]
            wd_or <= _wd_or_T_2 @[Id.scala 248:15]
            instvalid <= UInt<1>("h0") @[Id.scala 249:19]
          else :
            node _T_22 = eq(UInt<6>("he"), op) @[Id.scala 95:16]
            when _T_22 : @[Id.scala 95:16]
              wreg_or <= UInt<1>("h1") @[Id.scala 252:17]
              aluop_or <= UInt<8>("h26") @[Id.scala 253:18]
              alusel_or <= UInt<3>("h1") @[Id.scala 254:19]
              reg1_read_or <= UInt<1>("h1") @[Id.scala 255:22]
              reg2_read_or <= UInt<1>("h0") @[Id.scala 256:22]
              node _imm_T_4 = bits(io.inst_i, 15, 0) @[Id.scala 257:40]
              node _imm_T_5 = cat(UInt<16>("h0"), _imm_T_4) @[Cat.scala 33:92]
              imm <= _imm_T_5 @[Id.scala 257:13]
              node _wd_or_T_3 = bits(io.inst_i, 20, 16) @[Id.scala 258:27]
              wd_or <= _wd_or_T_3 @[Id.scala 258:15]
              instvalid <= UInt<1>("h0") @[Id.scala 259:19]
            else :
              node _T_23 = eq(UInt<6>("hf"), op) @[Id.scala 95:16]
              when _T_23 : @[Id.scala 95:16]
                wreg_or <= UInt<1>("h1") @[Id.scala 262:17]
                aluop_or <= UInt<8>("h25") @[Id.scala 263:18]
                alusel_or <= UInt<3>("h1") @[Id.scala 264:19]
                reg1_read_or <= UInt<1>("h1") @[Id.scala 265:22]
                reg2_read_or <= UInt<1>("h0") @[Id.scala 266:22]
                node _imm_T_6 = bits(io.inst_i, 15, 0) @[Id.scala 267:29]
                node _imm_T_7 = cat(_imm_T_6, UInt<16>("h0")) @[Cat.scala 33:92]
                imm <= _imm_T_7 @[Id.scala 267:13]
                node _wd_or_T_4 = bits(io.inst_i, 20, 16) @[Id.scala 268:27]
                wd_or <= _wd_or_T_4 @[Id.scala 268:15]
                instvalid <= UInt<1>("h0") @[Id.scala 269:19]
              else :
                node _T_24 = eq(UInt<6>("h33"), op) @[Id.scala 95:16]
                when _T_24 : @[Id.scala 95:16]
                  wreg_or <= UInt<1>("h1") @[Id.scala 272:17]
                  aluop_or <= UInt<8>("h0") @[Id.scala 273:18]
                  alusel_or <= UInt<3>("h0") @[Id.scala 274:19]
                  reg1_read_or <= UInt<1>("h0") @[Id.scala 275:22]
                  reg2_read_or <= UInt<1>("h0") @[Id.scala 276:22]
                  instvalid <= UInt<1>("h0") @[Id.scala 277:19]
      node _T_25 = bits(io.inst_i, 31, 21) @[Id.scala 280:19]
      node _T_26 = eq(_T_25, UInt<1>("h0")) @[Id.scala 280:28]
      when _T_26 : @[Id.scala 280:37]
        node _T_27 = eq(op3, UInt<6>("h0")) @[Id.scala 281:16]
        when _T_27 : @[Id.scala 281:29]
          wreg_or <= UInt<1>("h1") @[Id.scala 282:17]
          aluop_or <= UInt<8>("h7c") @[Id.scala 283:18]
          alusel_or <= UInt<3>("h2") @[Id.scala 284:19]
          reg1_read_or <= UInt<1>("h0") @[Id.scala 285:22]
          reg2_read_or <= UInt<1>("h1") @[Id.scala 286:22]
          node _imm_T_8 = bits(io.inst_i, 10, 6) @[Id.scala 287:25]
          imm <= _imm_T_8 @[Id.scala 287:13]
          node _wd_or_T_5 = bits(io.inst_i, 15, 11) @[Id.scala 288:27]
          wd_or <= _wd_or_T_5 @[Id.scala 288:15]
          instvalid <= UInt<1>("h0") @[Id.scala 289:19]
        else :
          node _T_28 = eq(op3, UInt<6>("h2")) @[Id.scala 290:22]
          when _T_28 : @[Id.scala 290:35]
            wreg_or <= UInt<1>("h1") @[Id.scala 291:17]
            aluop_or <= UInt<8>("h2") @[Id.scala 292:18]
            alusel_or <= UInt<3>("h2") @[Id.scala 293:19]
            reg1_read_or <= UInt<1>("h0") @[Id.scala 294:22]
            reg2_read_or <= UInt<1>("h1") @[Id.scala 295:22]
            node _imm_T_9 = bits(io.inst_i, 10, 6) @[Id.scala 296:25]
            imm <= _imm_T_9 @[Id.scala 296:13]
            node _wd_or_T_6 = bits(io.inst_i, 15, 11) @[Id.scala 297:27]
            wd_or <= _wd_or_T_6 @[Id.scala 297:15]
            instvalid <= UInt<1>("h0") @[Id.scala 298:19]
          else :
            node _T_29 = eq(op3, UInt<6>("h3")) @[Id.scala 299:22]
            when _T_29 : @[Id.scala 299:35]
              wreg_or <= UInt<1>("h1") @[Id.scala 300:17]
              aluop_or <= UInt<8>("h3") @[Id.scala 301:18]
              alusel_or <= UInt<3>("h2") @[Id.scala 302:19]
              reg1_read_or <= UInt<1>("h0") @[Id.scala 303:22]
              reg2_read_or <= UInt<1>("h1") @[Id.scala 304:22]
              node _imm_T_10 = bits(io.inst_i, 10, 6) @[Id.scala 305:25]
              imm <= _imm_T_10 @[Id.scala 305:13]
              node _wd_or_T_7 = bits(io.inst_i, 15, 11) @[Id.scala 306:27]
              wd_or <= _wd_or_T_7 @[Id.scala 306:15]
              instvalid <= UInt<1>("h0") @[Id.scala 307:19]
    node _T_30 = asUInt(reset) @[Id.scala 313:14]
    node _T_31 = eq(_T_30, UInt<1>("h1")) @[Id.scala 313:21]
    when _T_31 : @[Id.scala 313:36]
      reg1_or <= UInt<1>("h0") @[Id.scala 314:13]
    else :
      node _T_32 = eq(reg1_read_or, UInt<1>("h1")) @[Id.scala 315:27]
      when _T_32 : @[Id.scala 315:36]
        reg1_or <= io.reg1_data_i @[Id.scala 316:13]
      else :
        node _T_33 = eq(reg1_read_or, UInt<1>("h0")) @[Id.scala 317:27]
        when _T_33 : @[Id.scala 317:36]
          reg1_or <= imm @[Id.scala 318:13]
        else :
          reg1_or <= UInt<1>("h0") @[Id.scala 320:13]
    node _T_34 = asUInt(reset) @[Id.scala 324:14]
    node _T_35 = eq(_T_34, UInt<1>("h1")) @[Id.scala 324:21]
    when _T_35 : @[Id.scala 324:36]
      reg2_or <= UInt<1>("h0") @[Id.scala 325:13]
    else :
      node _T_36 = eq(reg2_read_or, UInt<1>("h1")) @[Id.scala 326:27]
      when _T_36 : @[Id.scala 326:36]
        reg2_or <= io.reg2_data_i @[Id.scala 327:13]
      else :
        node _T_37 = eq(reg2_read_or, UInt<1>("h0")) @[Id.scala 328:27]
        when _T_37 : @[Id.scala 328:36]
          reg2_or <= imm @[Id.scala 329:13]
        else :
          reg2_or <= UInt<1>("h0") @[Id.scala 331:13]

  module Regfile :
    input clock : Clock
    input reset : Reset
    output io : { flip we : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<32>, flip re1 : UInt<1>, flip raddr1 : UInt<5>, flip re2 : UInt<1>, flip raddr2 : UInt<5>, rdata1 : UInt<32>, rdata2 : UInt<32>}

    reg rdata1r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), rdata1r) @[Regfile.scala 22:20]
    reg rdata2r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), rdata2r) @[Regfile.scala 23:20]
    io.rdata1 <= rdata1r @[Regfile.scala 25:13]
    io.rdata2 <= rdata2r @[Regfile.scala 26:13]
    wire _regs_WIRE : UInt<32>[32] @[Regfile.scala 29:29]
    _regs_WIRE[0] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[1] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[2] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[3] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[4] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[5] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[6] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[7] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[8] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[9] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[10] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[11] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[12] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[13] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[14] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[15] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[16] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[17] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[18] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[19] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[20] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[21] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[22] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[23] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[24] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[25] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[26] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[27] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[28] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[29] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[30] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[31] <= UInt<32>("h0") @[Regfile.scala 29:29]
    reg regs : UInt<32>[32], clock with :
      reset => (reset, _regs_WIRE) @[Regfile.scala 29:21]
    node _T = asUInt(reset) @[Regfile.scala 31:14]
    node _T_1 = eq(_T, UInt<1>("h0")) @[Regfile.scala 31:21]
    when _T_1 : @[Regfile.scala 31:37]
      node _T_2 = eq(io.we, UInt<1>("h1")) @[Regfile.scala 32:16]
      node _T_3 = neq(io.waddr, UInt<1>("h0")) @[Regfile.scala 32:44]
      node _T_4 = and(_T_2, _T_3) @[Regfile.scala 32:32]
      when _T_4 : @[Regfile.scala 32:53]
        regs[io.waddr] <= io.wdata @[Regfile.scala 33:22]
    node _T_5 = asUInt(reset) @[Regfile.scala 36:14]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[Regfile.scala 36:21]
    when _T_6 : @[Regfile.scala 36:37]
      rdata1r <= UInt<1>("h0") @[Regfile.scala 37:13]
    else :
      node _T_7 = eq(io.raddr1, UInt<1>("h0")) @[Regfile.scala 38:24]
      when _T_7 : @[Regfile.scala 38:33]
        rdata1r <= UInt<1>("h0") @[Regfile.scala 39:13]
      else :
        node _T_8 = eq(io.re1, UInt<1>("h1")) @[Regfile.scala 40:21]
        when _T_8 : @[Regfile.scala 40:37]
          rdata1r <= regs[io.raddr1] @[Regfile.scala 41:13]
        else :
          rdata1r <= UInt<1>("h0") @[Regfile.scala 43:13]
    node _T_9 = asUInt(reset) @[Regfile.scala 46:14]
    node _T_10 = eq(_T_9, UInt<1>("h1")) @[Regfile.scala 46:21]
    when _T_10 : @[Regfile.scala 46:36]
      rdata2r <= UInt<1>("h0") @[Regfile.scala 47:13]
    else :
      node _T_11 = eq(io.raddr2, UInt<1>("h0")) @[Regfile.scala 48:24]
      when _T_11 : @[Regfile.scala 48:33]
        rdata2r <= UInt<1>("h0") @[Regfile.scala 49:13]
      else :
        node _T_12 = eq(io.re2, UInt<1>("h1")) @[Regfile.scala 50:21]
        when _T_12 : @[Regfile.scala 50:37]
          rdata2r <= regs[io.raddr2] @[Regfile.scala 51:13]
        else :
          rdata2r <= UInt<1>("h0") @[Regfile.scala 53:13]

  module Ex :
    input clock : Clock
    input reset : Reset
    output io : { flip aluop_i : UInt<8>, flip alusel_i : UInt<3>, flip reg1_i : UInt<32>, flip reg2_i : UInt<32>, flip wd_i : UInt<5>, flip wreg_i : UInt<1>, flip hi_i : UInt<32>, flip lo_i : UInt<32>, wd_o : UInt<5>, wreg_o : UInt<1>, wdata_o : UInt<32>, hi_o : UInt<32>, lo_o : UInt<32>, whilo_o : UInt<1>}

    reg wd_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wd_or) @[Ex.scala 32:18]
    reg wreg_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wreg_or) @[Ex.scala 33:20]
    reg wdata_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wdata_or) @[Ex.scala 34:21]
    reg hi_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), hi_or) @[Ex.scala 35:18]
    reg lo_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), lo_or) @[Ex.scala 36:18]
    reg whilo_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), whilo_or) @[Ex.scala 37:21]
    io.wd_o <= wd_or @[Ex.scala 39:11]
    io.wreg_o <= wreg_or @[Ex.scala 40:13]
    io.wdata_o <= wdata_or @[Ex.scala 41:14]
    io.hi_o <= hi_or @[Ex.scala 42:11]
    io.lo_o <= lo_or @[Ex.scala 43:11]
    io.whilo_o <= whilo_or @[Ex.scala 44:14]
    reg logicout : UInt<32>, clock with :
      reset => (UInt<1>("h0"), logicout) @[Ex.scala 47:21]
    reg shiftres : UInt<32>, clock with :
      reset => (UInt<1>("h0"), shiftres) @[Ex.scala 48:21]
    reg moveres : UInt<32>, clock with :
      reset => (UInt<1>("h0"), moveres) @[Ex.scala 49:20]
    reg HI : UInt<32>, clock with :
      reset => (UInt<1>("h0"), HI) @[Ex.scala 50:15]
    reg LO : UInt<32>, clock with :
      reset => (UInt<1>("h0"), LO) @[Ex.scala 51:15]
    node _T = asUInt(reset) @[Ex.scala 56:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Ex.scala 56:21]
    when _T_1 : @[Ex.scala 56:36]
      logicout <= UInt<1>("h0") @[Ex.scala 57:14]
    else :
      logicout <= UInt<1>("h0") @[Ex.scala 59:14]
      node _T_2 = eq(UInt<8>("h25"), io.aluop_i) @[Ex.scala 60:24]
      when _T_2 : @[Ex.scala 60:24]
        node _logicout_T = or(io.reg1_i, io.reg2_i) @[Ex.scala 62:31]
        logicout <= _logicout_T @[Ex.scala 62:18]
      else :
        node _T_3 = eq(UInt<8>("h24"), io.aluop_i) @[Ex.scala 60:24]
        when _T_3 : @[Ex.scala 60:24]
          node _logicout_T_1 = and(io.reg1_i, io.reg2_i) @[Ex.scala 65:31]
          logicout <= _logicout_T_1 @[Ex.scala 65:18]
        else :
          node _T_4 = eq(UInt<8>("h27"), io.aluop_i) @[Ex.scala 60:24]
          when _T_4 : @[Ex.scala 60:24]
            node _logicout_T_2 = or(io.reg1_i, io.reg2_i) @[Ex.scala 68:33]
            node _logicout_T_3 = not(_logicout_T_2) @[Ex.scala 68:21]
            logicout <= _logicout_T_3 @[Ex.scala 68:18]
          else :
            node _T_5 = eq(UInt<8>("h26"), io.aluop_i) @[Ex.scala 60:24]
            when _T_5 : @[Ex.scala 60:24]
              node _logicout_T_4 = xor(io.reg1_i, io.reg2_i) @[Ex.scala 71:31]
              logicout <= _logicout_T_4 @[Ex.scala 71:18]
    node _T_6 = asUInt(reset) @[Ex.scala 77:14]
    node _T_7 = eq(_T_6, UInt<1>("h1")) @[Ex.scala 77:21]
    when _T_7 : @[Ex.scala 77:36]
      shiftres <= UInt<1>("h0") @[Ex.scala 78:14]
    else :
      shiftres <= UInt<1>("h0") @[Ex.scala 80:14]
      node _T_8 = eq(UInt<8>("h7c"), io.aluop_i) @[Ex.scala 81:24]
      when _T_8 : @[Ex.scala 81:24]
        node _shiftres_T = bits(io.reg1_i, 4, 0) @[Ex.scala 83:43]
        node _shiftres_T_1 = dshl(io.reg2_i, _shiftres_T) @[Ex.scala 83:31]
        shiftres <= _shiftres_T_1 @[Ex.scala 83:18]
      else :
        node _T_9 = eq(UInt<8>("h2"), io.aluop_i) @[Ex.scala 81:24]
        when _T_9 : @[Ex.scala 81:24]
          node _shiftres_T_2 = bits(io.reg1_i, 4, 0) @[Ex.scala 86:43]
          node _shiftres_T_3 = dshr(io.reg2_i, _shiftres_T_2) @[Ex.scala 86:31]
          shiftres <= _shiftres_T_3 @[Ex.scala 86:18]
        else :
          node _T_10 = eq(UInt<8>("h3"), io.aluop_i) @[Ex.scala 81:24]
          when _T_10 : @[Ex.scala 81:24]
            node _shiftres_T_4 = asSInt(io.reg2_i) @[Ex.scala 89:32]
            node _shiftres_T_5 = bits(io.reg1_i, 4, 0) @[Ex.scala 89:51]
            node _shiftres_T_6 = dshr(_shiftres_T_4, _shiftres_T_5) @[Ex.scala 89:39]
            node _shiftres_T_7 = asUInt(_shiftres_T_6) @[Ex.scala 89:59]
            shiftres <= _shiftres_T_7 @[Ex.scala 89:18]
    node _T_11 = asUInt(reset) @[Ex.scala 95:14]
    node _T_12 = eq(_T_11, UInt<1>("h1")) @[Ex.scala 95:21]
    when _T_12 : @[Ex.scala 95:36]
      HI <= UInt<1>("h0") @[Ex.scala 96:8]
      LO <= UInt<1>("h0") @[Ex.scala 97:8]
    else :
      HI <= io.hi_i @[Ex.scala 99:8]
      LO <= io.lo_i @[Ex.scala 100:8]
    node _T_13 = asUInt(reset) @[Ex.scala 104:14]
    node _T_14 = eq(_T_13, UInt<1>("h1")) @[Ex.scala 104:21]
    when _T_14 : @[Ex.scala 104:36]
      moveres <= UInt<1>("h0") @[Ex.scala 105:13]
    else :
      moveres <= UInt<1>("h0") @[Ex.scala 107:13]
      node _T_15 = eq(UInt<8>("h10"), io.aluop_i) @[Ex.scala 108:24]
      when _T_15 : @[Ex.scala 108:24]
        moveres <= HI @[Ex.scala 110:17]
      else :
        node _T_16 = eq(UInt<8>("h12"), io.aluop_i) @[Ex.scala 108:24]
        when _T_16 : @[Ex.scala 108:24]
          moveres <= LO @[Ex.scala 113:17]
        else :
          node _T_17 = eq(UInt<8>("ha"), io.aluop_i) @[Ex.scala 108:24]
          when _T_17 : @[Ex.scala 108:24]
            moveres <= io.reg1_i @[Ex.scala 116:17]
          else :
            node _T_18 = eq(UInt<8>("hb"), io.aluop_i) @[Ex.scala 108:24]
            when _T_18 : @[Ex.scala 108:24]
              moveres <= io.reg1_i @[Ex.scala 119:17]
    wd_or <= io.wd_i @[Ex.scala 125:9]
    wreg_or <= io.wreg_i @[Ex.scala 126:11]
    wdata_or <= UInt<1>("h0") @[Ex.scala 127:12]
    node _T_19 = eq(UInt<3>("h1"), io.alusel_i) @[Ex.scala 128:23]
    when _T_19 : @[Ex.scala 128:23]
      wdata_or <= logicout @[Ex.scala 129:34]
    else :
      node _T_20 = eq(UInt<3>("h2"), io.alusel_i) @[Ex.scala 128:23]
      when _T_20 : @[Ex.scala 128:23]
        wdata_or <= shiftres @[Ex.scala 130:34]
      else :
        node _T_21 = eq(UInt<3>("h3"), io.alusel_i) @[Ex.scala 128:23]
        when _T_21 : @[Ex.scala 128:23]
          wdata_or <= moveres @[Ex.scala 131:33]
    node _T_22 = asUInt(reset) @[Ex.scala 135:14]
    node _T_23 = eq(_T_22, UInt<1>("h1")) @[Ex.scala 135:21]
    when _T_23 : @[Ex.scala 135:36]
      whilo_or <= UInt<1>("h0") @[Ex.scala 136:14]
      hi_or <= UInt<1>("h0") @[Ex.scala 137:11]
      lo_or <= UInt<1>("h0") @[Ex.scala 138:11]
    else :
      node _T_24 = eq(io.aluop_i, UInt<8>("h11")) @[Ex.scala 139:25]
      when _T_24 : @[Ex.scala 139:42]
        whilo_or <= UInt<1>("h1") @[Ex.scala 140:14]
        hi_or <= io.reg1_i @[Ex.scala 141:11]
        lo_or <= LO @[Ex.scala 142:11]
      else :
        node _T_25 = eq(io.aluop_i, UInt<8>("h13")) @[Ex.scala 143:25]
        when _T_25 : @[Ex.scala 143:42]
          whilo_or <= UInt<1>("h1") @[Ex.scala 144:14]
          hi_or <= HI @[Ex.scala 145:11]
          lo_or <= io.reg1_i @[Ex.scala 146:11]
        else :
          whilo_or <= UInt<1>("h0") @[Ex.scala 148:14]
          hi_or <= UInt<1>("h0") @[Ex.scala 149:11]
          lo_or <= UInt<1>("h0") @[Ex.scala 150:11]

  module Wb :
    input clock : Clock
    input reset : Reset
    output io : { flip ex_wd : UInt<5>, flip ex_wreg : UInt<1>, flip ex_wdata : UInt<32>, flip ex_hi : UInt<32>, flip ex_lo : UInt<32>, flip ex_whilo : UInt<1>, wb_wd : UInt<5>, wb_wreg : UInt<1>, wb_wdata : UInt<32>, wb_hi : UInt<32>, wb_lo : UInt<32>, wb_whilo : UInt<1>}

    reg wb_wregr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_wregr) @[Wb.scala 25:21]
    reg wb_hir : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wb_hir) @[Wb.scala 26:19]
    reg wb_lor : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wb_lor) @[Wb.scala 27:19]
    reg wb_whilor : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_whilor) @[Wb.scala 28:22]
    io.wb_wreg <= wb_wregr @[Wb.scala 29:14]
    io.wb_hi <= wb_hir @[Wb.scala 30:12]
    io.wb_lo <= wb_lor @[Wb.scala 31:12]
    io.wb_whilo <= wb_whilor @[Wb.scala 32:15]
    node _T = asUInt(reset) @[Wb.scala 34:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Wb.scala 34:21]
    when _T_1 : @[Wb.scala 34:36]
      io.wb_wd <= UInt<5>("h0") @[Wb.scala 35:14]
      wb_wregr <= UInt<1>("h0") @[Wb.scala 36:14]
      io.wb_wdata <= UInt<1>("h0") @[Wb.scala 37:17]
      wb_hir <= UInt<1>("h0") @[Wb.scala 38:12]
      wb_lor <= UInt<1>("h0") @[Wb.scala 39:12]
      wb_whilor <= UInt<1>("h0") @[Wb.scala 40:15]
    else :
      io.wb_wd <= io.ex_wd @[Wb.scala 42:14]
      wb_wregr <= io.ex_wreg @[Wb.scala 43:14]
      io.wb_wdata <= io.ex_wdata @[Wb.scala 44:17]
      wb_hir <= io.ex_hi @[Wb.scala 45:12]
      wb_lor <= io.ex_lo @[Wb.scala 46:12]
      wb_whilor <= io.ex_whilo @[Wb.scala 47:15]

  module HILO_reg :
    input clock : Clock
    input reset : Reset
    output io : { flip we : UInt<1>, flip hi_i : UInt<32>, flip lo_i : UInt<32>, hi_o : UInt<32>, lo_o : UInt<32>}

    reg hi_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), hi_or) @[HILO_reg.scala 20:18]
    reg lo_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), lo_or) @[HILO_reg.scala 21:18]
    io.hi_o <= hi_or @[HILO_reg.scala 23:11]
    io.lo_o <= lo_or @[HILO_reg.scala 24:11]
    node _T = asUInt(reset) @[HILO_reg.scala 26:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[HILO_reg.scala 26:21]
    when _T_1 : @[HILO_reg.scala 26:36]
      hi_or <= UInt<1>("h0") @[HILO_reg.scala 27:11]
      lo_or <= UInt<1>("h0") @[HILO_reg.scala 28:11]
    else :
      node _T_2 = eq(io.we, UInt<1>("h1")) @[HILO_reg.scala 29:20]
      when _T_2 : @[HILO_reg.scala 29:37]
        hi_or <= io.hi_i @[HILO_reg.scala 30:11]
        lo_or <= io.lo_i @[HILO_reg.scala 31:11]

  module OpenMips :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip rom_data_i : UInt<32>, rom_addr_o : UInt<32>, rom_ce_o : UInt<1>}

    wire id_aluop : UInt<8> @[OpenMips.scala 15:22]
    wire id_alusel : UInt<3> @[OpenMips.scala 16:23]
    wire id_reg1 : UInt<32> @[OpenMips.scala 17:21]
    wire id_reg2 : UInt<32> @[OpenMips.scala 18:21]
    wire id_wreg : UInt<1> @[OpenMips.scala 19:21]
    wire id_wd : UInt<5> @[OpenMips.scala 20:19]
    wire reg1_read : UInt<1> @[OpenMips.scala 22:23]
    wire reg2_read : UInt<1> @[OpenMips.scala 23:23]
    wire reg1_data : UInt<32> @[OpenMips.scala 24:23]
    wire reg2_data : UInt<32> @[OpenMips.scala 25:23]
    wire reg1_addr : UInt<5> @[OpenMips.scala 26:23]
    wire reg2_addr : UInt<5> @[OpenMips.scala 27:23]
    wire hi : UInt<32> @[OpenMips.scala 28:16]
    wire lo : UInt<32> @[OpenMips.scala 29:16]
    wire ex_wreg : UInt<1> @[OpenMips.scala 31:21]
    wire ex_wd : UInt<5> @[OpenMips.scala 32:19]
    wire ex_wdata : UInt<32> @[OpenMips.scala 33:22]
    wire ex_hi_o : UInt<32> @[OpenMips.scala 34:21]
    wire ex_lo_o : UInt<32> @[OpenMips.scala 35:21]
    wire ex_whilo_o : UInt<1> @[OpenMips.scala 36:24]
    wire wb_wd : UInt<5> @[OpenMips.scala 38:19]
    wire wb_wreg : UInt<1> @[OpenMips.scala 39:21]
    wire wb_wdata : UInt<32> @[OpenMips.scala 40:22]
    wire wb_hi : UInt<32> @[OpenMips.scala 42:19]
    wire wb_lo : UInt<32> @[OpenMips.scala 43:19]
    wire wb_whilo : UInt<1> @[OpenMips.scala 44:22]
    inst pc_reg0 of PC_reg @[OpenMips.scala 46:23]
    pc_reg0.clock <= clock
    pc_reg0.reset <= reset
    io.rom_addr_o <= pc_reg0.io.pc @[OpenMips.scala 47:17]
    io.rom_ce_o <= pc_reg0.io.ce @[OpenMips.scala 48:15]
    inst id0 of Id @[OpenMips.scala 51:19]
    id0.clock <= clock
    id0.reset <= reset
    id0.io.pc_i <= io.rom_addr_o @[OpenMips.scala 52:15]
    id0.io.inst_i <= io.rom_data_i @[OpenMips.scala 53:17]
    id0.io.reg1_data_i <= reg1_data @[OpenMips.scala 55:22]
    id0.io.reg2_data_i <= reg2_data @[OpenMips.scala 56:22]
    reg1_read <= id0.io.reg1_read_o @[OpenMips.scala 58:13]
    reg2_read <= id0.io.reg2_read_o @[OpenMips.scala 59:13]
    reg1_addr <= id0.io.reg1_addr_o @[OpenMips.scala 60:13]
    reg2_addr <= id0.io.reg2_addr_o @[OpenMips.scala 61:13]
    id_aluop <= id0.io.aluop_o @[OpenMips.scala 63:12]
    id_alusel <= id0.io.alusel_o @[OpenMips.scala 64:13]
    id_reg1 <= id0.io.reg1_o @[OpenMips.scala 65:11]
    id_reg2 <= id0.io.reg2_o @[OpenMips.scala 66:11]
    id_wd <= id0.io.wd_o @[OpenMips.scala 67:9]
    id_wreg <= id0.io.wreg_o @[OpenMips.scala 68:11]
    inst regfile1 of Regfile @[OpenMips.scala 71:24]
    regfile1.clock <= clock
    regfile1.reset <= reset
    regfile1.io.we <= wb_wreg @[OpenMips.scala 73:18]
    regfile1.io.waddr <= wb_wd @[OpenMips.scala 74:21]
    regfile1.io.wdata <= wb_wdata @[OpenMips.scala 75:21]
    regfile1.io.re1 <= reg1_read @[OpenMips.scala 76:19]
    regfile1.io.raddr1 <= reg1_addr @[OpenMips.scala 77:22]
    reg1_data <= regfile1.io.rdata1 @[OpenMips.scala 78:13]
    regfile1.io.re2 <= reg2_read @[OpenMips.scala 79:19]
    regfile1.io.raddr2 <= reg2_addr @[OpenMips.scala 80:22]
    reg2_data <= regfile1.io.rdata2 @[OpenMips.scala 81:13]
    inst ex0 of Ex @[OpenMips.scala 83:19]
    ex0.clock <= clock
    ex0.reset <= reset
    ex0.io.aluop_i <= id_aluop @[OpenMips.scala 85:18]
    ex0.io.alusel_i <= id_alusel @[OpenMips.scala 86:19]
    ex0.io.reg1_i <= id_reg1 @[OpenMips.scala 87:17]
    ex0.io.reg2_i <= id_reg2 @[OpenMips.scala 88:17]
    ex0.io.wd_i <= id_wd @[OpenMips.scala 89:15]
    ex0.io.wreg_i <= id_wreg @[OpenMips.scala 90:17]
    ex0.io.hi_i <= hi @[OpenMips.scala 92:15]
    ex0.io.lo_i <= lo @[OpenMips.scala 93:15]
    ex_wd <= ex0.io.wd_o @[OpenMips.scala 95:9]
    ex_wreg <= ex0.io.wreg_o @[OpenMips.scala 96:11]
    ex_wdata <= ex0.io.wdata_o @[OpenMips.scala 97:12]
    ex_hi_o <= ex0.io.hi_o @[OpenMips.scala 98:11]
    ex_lo_o <= ex0.io.lo_o @[OpenMips.scala 99:11]
    ex_whilo_o <= ex0.io.whilo_o @[OpenMips.scala 100:14]
    inst wb0 of Wb @[OpenMips.scala 101:19]
    wb0.clock <= clock
    wb0.reset <= reset
    wb0.io.ex_wd <= ex_wd @[OpenMips.scala 103:16]
    wb0.io.ex_wreg <= ex_wreg @[OpenMips.scala 104:18]
    wb0.io.ex_wdata <= ex_wdata @[OpenMips.scala 105:19]
    wb0.io.ex_hi <= ex_hi_o @[OpenMips.scala 106:16]
    wb0.io.ex_lo <= ex_lo_o @[OpenMips.scala 107:16]
    wb0.io.ex_whilo <= ex_whilo_o @[OpenMips.scala 108:19]
    wb_wd <= wb0.io.wb_wd @[OpenMips.scala 110:9]
    wb_wreg <= wb0.io.wb_wreg @[OpenMips.scala 111:11]
    wb_wdata <= wb0.io.wb_wdata @[OpenMips.scala 112:12]
    wb_hi <= wb0.io.wb_hi @[OpenMips.scala 113:9]
    wb_lo <= wb0.io.wb_lo @[OpenMips.scala 114:9]
    wb_whilo <= wb0.io.wb_whilo @[OpenMips.scala 115:12]
    inst hilo_reg0 of HILO_reg @[OpenMips.scala 116:25]
    hilo_reg0.clock <= clock
    hilo_reg0.reset <= reset
    hilo_reg0.io.we <= wb_whilo @[OpenMips.scala 118:19]
    hilo_reg0.io.hi_i <= wb_hi @[OpenMips.scala 119:21]
    hilo_reg0.io.lo_i <= wb_lo @[OpenMips.scala 120:21]
    hi <= hilo_reg0.io.hi_o @[OpenMips.scala 122:6]
    lo <= hilo_reg0.io.lo_o @[OpenMips.scala 123:6]

