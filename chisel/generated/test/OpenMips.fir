circuit OpenMips :
  module PC_reg :
    input clock : Clock
    input reset : Reset
    output io : { pc : UInt<32>, ce : UInt<1>}

    reg pcr : UInt<32>, clock with :
      reset => (UInt<1>("h0"), pcr) @[PC_reg.scala 13:16]
    reg cer : UInt<1>, clock with :
      reset => (UInt<1>("h0"), cer) @[PC_reg.scala 14:16]
    io.pc <= pcr @[PC_reg.scala 16:9]
    io.ce <= cer @[PC_reg.scala 17:9]
    node _T = asUInt(reset) @[PC_reg.scala 19:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[PC_reg.scala 19:21]
    when _T_1 : @[PC_reg.scala 19:36]
      cer <= UInt<1>("h0") @[PC_reg.scala 20:9]
    else :
      cer <= UInt<1>("h1") @[PC_reg.scala 22:9]
    node _T_2 = eq(cer, UInt<1>("h0")) @[PC_reg.scala 24:12]
    when _T_2 : @[PC_reg.scala 24:29]
      pcr <= UInt<1>("h0") @[PC_reg.scala 25:9]
    else :
      node _pcr_T = add(pcr, UInt<3>("h4")) @[PC_reg.scala 27:16]
      node _pcr_T_1 = tail(_pcr_T, 1) @[PC_reg.scala 27:16]
      pcr <= _pcr_T_1 @[PC_reg.scala 27:9]

  module Id :
    input clock : Clock
    input reset : Reset
    output io : { flip pc_i : UInt<32>, flip inst_i : UInt<32>, flip reg1_data_i : UInt<32>, flip reg2_data_i : UInt<32>, reg1_read_o : UInt<1>, reg2_read_o : UInt<1>, reg1_addr_o : UInt<5>, reg2_addr_o : UInt<5>, aluop_o : UInt<8>, alusel_o : UInt<3>, reg1_o : UInt<32>, reg2_o : UInt<32>, wd_o : UInt<5>, wreg_o : UInt<1>}

    reg reg1_read_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg1_read_or) @[Id.scala 33:25]
    reg reg2_read_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), reg2_read_or) @[Id.scala 34:25]
    reg reg1_addr_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), reg1_addr_or) @[Id.scala 35:25]
    reg reg2_addr_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), reg2_addr_or) @[Id.scala 36:25]
    reg aluop_or : UInt<8>, clock with :
      reset => (UInt<1>("h0"), aluop_or) @[Id.scala 39:21]
    reg alusel_or : UInt<3>, clock with :
      reset => (UInt<1>("h0"), alusel_or) @[Id.scala 40:22]
    reg reg1_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg1_or) @[Id.scala 41:20]
    reg reg2_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), reg2_or) @[Id.scala 42:20]
    reg wd_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wd_or) @[Id.scala 43:18]
    reg wreg_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wreg_or) @[Id.scala 44:20]
    io.reg1_read_o <= reg1_read_or @[Id.scala 46:18]
    io.reg2_read_o <= reg2_read_or @[Id.scala 47:18]
    io.reg1_addr_o <= reg1_addr_or @[Id.scala 48:18]
    io.reg2_addr_o <= reg2_addr_or @[Id.scala 49:18]
    io.aluop_o <= aluop_or @[Id.scala 50:14]
    io.alusel_o <= alusel_or @[Id.scala 51:15]
    io.reg1_o <= reg1_or @[Id.scala 52:13]
    io.reg2_o <= reg2_or @[Id.scala 53:13]
    io.wd_o <= wd_or @[Id.scala 54:11]
    io.wreg_o <= wreg_or @[Id.scala 55:13]
    wire op : UInt<6> @[Id.scala 58:16]
    wire op2 : UInt<6> @[Id.scala 59:17]
    wire op3 : UInt<6> @[Id.scala 60:17]
    wire op4 : UInt<6> @[Id.scala 61:17]
    node _op_T = bits(io.inst_i, 31, 26) @[Id.scala 62:18]
    op <= _op_T @[Id.scala 62:6]
    node _op2_T = bits(io.inst_i, 10, 6) @[Id.scala 63:19]
    op2 <= _op2_T @[Id.scala 63:7]
    node _op3_T = bits(io.inst_i, 5, 0) @[Id.scala 64:19]
    op3 <= _op3_T @[Id.scala 64:7]
    node _op4_T = bits(io.inst_i, 20, 16) @[Id.scala 65:19]
    op4 <= _op4_T @[Id.scala 65:7]
    reg imm : UInt<32>, clock with :
      reset => (UInt<1>("h0"), imm) @[Id.scala 68:16]
    reg instvalid : UInt<1>, clock with :
      reset => (UInt<1>("h0"), instvalid) @[Id.scala 71:22]
    node _T = asUInt(reset) @[Id.scala 74:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Id.scala 74:21]
    when _T_1 : @[Id.scala 74:36]
      aluop_or <= UInt<8>("h0") @[Id.scala 75:14]
      alusel_or <= UInt<3>("h0") @[Id.scala 76:15]
      wd_or <= UInt<5>("h0") @[Id.scala 77:11]
      wreg_or <= UInt<1>("h0") @[Id.scala 78:13]
      instvalid <= UInt<1>("h1") @[Id.scala 79:15]
      reg1_read_or <= UInt<1>("h0") @[Id.scala 80:18]
      reg2_read_or <= UInt<1>("h0") @[Id.scala 81:18]
      reg1_addr_or <= UInt<5>("h0") @[Id.scala 82:18]
      reg2_addr_or <= UInt<5>("h0") @[Id.scala 83:18]
      imm <= UInt<1>("h0") @[Id.scala 84:9]
    else :
      aluop_or <= UInt<8>("h0") @[Id.scala 86:14]
      alusel_or <= UInt<3>("h0") @[Id.scala 87:15]
      node _wd_or_T = bits(io.inst_i, 15, 11) @[Id.scala 88:23]
      wd_or <= _wd_or_T @[Id.scala 88:11]
      wreg_or <= UInt<1>("h0") @[Id.scala 89:13]
      instvalid <= UInt<1>("h1") @[Id.scala 90:15]
      reg1_read_or <= UInt<1>("h0") @[Id.scala 91:18]
      reg2_read_or <= UInt<1>("h0") @[Id.scala 92:18]
      node _reg1_addr_or_T = bits(io.inst_i, 25, 21) @[Id.scala 93:30]
      reg1_addr_or <= _reg1_addr_or_T @[Id.scala 93:18]
      node _reg2_addr_or_T = bits(io.inst_i, 20, 16) @[Id.scala 94:30]
      reg2_addr_or <= _reg2_addr_or_T @[Id.scala 94:18]
      imm <= UInt<32>("h0") @[Id.scala 95:9]
      node _T_2 = eq(UInt<6>("h0"), op) @[Id.scala 97:16]
      when _T_2 : @[Id.scala 97:16]
        node _T_3 = eq(UInt<5>("h0"), op2) @[Id.scala 99:21]
        when _T_3 : @[Id.scala 99:21]
          node _T_4 = eq(UInt<6>("h25"), op3) @[Id.scala 101:25]
          when _T_4 : @[Id.scala 101:25]
            wreg_or <= UInt<1>("h1") @[Id.scala 103:25]
            aluop_or <= UInt<8>("h25") @[Id.scala 104:26]
            alusel_or <= UInt<3>("h1") @[Id.scala 105:27]
            reg1_read_or <= UInt<1>("h1") @[Id.scala 106:30]
            reg2_read_or <= UInt<1>("h1") @[Id.scala 107:30]
            instvalid <= UInt<1>("h0") @[Id.scala 108:27]
          else :
            node _T_5 = eq(UInt<6>("h24"), op3) @[Id.scala 101:25]
            when _T_5 : @[Id.scala 101:25]
              wreg_or <= UInt<1>("h1") @[Id.scala 111:25]
              aluop_or <= UInt<8>("h24") @[Id.scala 112:26]
              alusel_or <= UInt<3>("h1") @[Id.scala 113:27]
              reg1_read_or <= UInt<1>("h1") @[Id.scala 114:30]
              reg2_read_or <= UInt<1>("h1") @[Id.scala 115:30]
              instvalid <= UInt<1>("h0") @[Id.scala 116:27]
            else :
              node _T_6 = eq(UInt<6>("h26"), op3) @[Id.scala 101:25]
              when _T_6 : @[Id.scala 101:25]
                wreg_or <= UInt<1>("h1") @[Id.scala 119:25]
                aluop_or <= UInt<8>("h26") @[Id.scala 120:26]
                alusel_or <= UInt<3>("h1") @[Id.scala 121:27]
                reg1_read_or <= UInt<1>("h1") @[Id.scala 122:30]
                reg2_read_or <= UInt<1>("h1") @[Id.scala 123:30]
                instvalid <= UInt<1>("h0") @[Id.scala 124:27]
              else :
                node _T_7 = eq(UInt<6>("h27"), op3) @[Id.scala 101:25]
                when _T_7 : @[Id.scala 101:25]
                  wreg_or <= UInt<1>("h1") @[Id.scala 127:25]
                  aluop_or <= UInt<8>("h27") @[Id.scala 128:26]
                  alusel_or <= UInt<3>("h1") @[Id.scala 129:27]
                  reg1_read_or <= UInt<1>("h1") @[Id.scala 130:30]
                  reg2_read_or <= UInt<1>("h1") @[Id.scala 131:30]
                  instvalid <= UInt<1>("h0") @[Id.scala 132:27]
                else :
                  node _T_8 = eq(UInt<6>("h4"), op3) @[Id.scala 101:25]
                  when _T_8 : @[Id.scala 101:25]
                    wreg_or <= UInt<1>("h1") @[Id.scala 135:25]
                    aluop_or <= UInt<8>("h7c") @[Id.scala 136:26]
                    alusel_or <= UInt<3>("h2") @[Id.scala 137:27]
                    reg1_read_or <= UInt<1>("h1") @[Id.scala 138:30]
                    reg2_read_or <= UInt<1>("h1") @[Id.scala 139:30]
                    instvalid <= UInt<1>("h0") @[Id.scala 140:27]
                  else :
                    node _T_9 = eq(UInt<6>("h6"), op3) @[Id.scala 101:25]
                    when _T_9 : @[Id.scala 101:25]
                      wreg_or <= UInt<1>("h1") @[Id.scala 143:25]
                      aluop_or <= UInt<8>("h2") @[Id.scala 144:26]
                      alusel_or <= UInt<3>("h2") @[Id.scala 145:27]
                      reg1_read_or <= UInt<1>("h1") @[Id.scala 146:30]
                      reg2_read_or <= UInt<1>("h1") @[Id.scala 147:30]
                      instvalid <= UInt<1>("h0") @[Id.scala 148:27]
                    else :
                      node _T_10 = eq(UInt<6>("h7"), op3) @[Id.scala 101:25]
                      when _T_10 : @[Id.scala 101:25]
                        wreg_or <= UInt<1>("h1") @[Id.scala 151:25]
                        aluop_or <= UInt<8>("h3") @[Id.scala 152:26]
                        alusel_or <= UInt<3>("h2") @[Id.scala 153:27]
                        reg1_read_or <= UInt<1>("h1") @[Id.scala 154:30]
                        reg2_read_or <= UInt<1>("h1") @[Id.scala 155:30]
                        instvalid <= UInt<1>("h0") @[Id.scala 156:27]
                      else :
                        node _T_11 = eq(UInt<6>("hf"), op3) @[Id.scala 101:25]
                        when _T_11 : @[Id.scala 101:25]
                          wreg_or <= UInt<1>("h0") @[Id.scala 159:25]
                          aluop_or <= UInt<8>("h2") @[Id.scala 160:26]
                          alusel_or <= UInt<3>("h0") @[Id.scala 161:27]
                          reg1_read_or <= UInt<1>("h0") @[Id.scala 162:30]
                          reg2_read_or <= UInt<1>("h1") @[Id.scala 163:30]
                          instvalid <= UInt<1>("h0") @[Id.scala 164:27]
      else :
        node _T_12 = eq(UInt<6>("hd"), op) @[Id.scala 97:16]
        when _T_12 : @[Id.scala 97:16]
          wreg_or <= UInt<1>("h1") @[Id.scala 171:17]
          aluop_or <= UInt<8>("h25") @[Id.scala 173:18]
          alusel_or <= UInt<3>("h1") @[Id.scala 175:19]
          reg1_read_or <= UInt<1>("h1") @[Id.scala 177:22]
          reg2_read_or <= UInt<1>("h0") @[Id.scala 179:22]
          node _imm_T = bits(io.inst_i, 15, 0) @[Id.scala 181:43]
          node _imm_T_1 = cat(UInt<16>("h0"), _imm_T) @[Cat.scala 33:92]
          imm <= _imm_T_1 @[Id.scala 181:13]
          node _wd_or_T_1 = bits(io.inst_i, 20, 16) @[Id.scala 183:27]
          wd_or <= _wd_or_T_1 @[Id.scala 183:15]
          instvalid <= UInt<1>("h0") @[Id.scala 185:19]
        else :
          node _T_13 = eq(UInt<6>("hc"), op) @[Id.scala 97:16]
          when _T_13 : @[Id.scala 97:16]
            wreg_or <= UInt<1>("h1") @[Id.scala 188:17]
            aluop_or <= UInt<8>("h24") @[Id.scala 189:18]
            alusel_or <= UInt<3>("h1") @[Id.scala 190:19]
            reg1_read_or <= UInt<1>("h1") @[Id.scala 191:22]
            reg2_read_or <= UInt<1>("h0") @[Id.scala 192:22]
            node _imm_T_2 = bits(io.inst_i, 15, 0) @[Id.scala 193:43]
            node _imm_T_3 = cat(UInt<16>("h0"), _imm_T_2) @[Cat.scala 33:92]
            imm <= _imm_T_3 @[Id.scala 193:13]
            node _wd_or_T_2 = bits(io.inst_i, 20, 16) @[Id.scala 194:27]
            wd_or <= _wd_or_T_2 @[Id.scala 194:15]
            instvalid <= UInt<1>("h0") @[Id.scala 195:19]
          else :
            node _T_14 = eq(UInt<6>("he"), op) @[Id.scala 97:16]
            when _T_14 : @[Id.scala 97:16]
              wreg_or <= UInt<1>("h1") @[Id.scala 198:17]
              aluop_or <= UInt<8>("h26") @[Id.scala 199:18]
              alusel_or <= UInt<3>("h1") @[Id.scala 200:19]
              reg1_read_or <= UInt<1>("h1") @[Id.scala 201:22]
              reg2_read_or <= UInt<1>("h0") @[Id.scala 202:22]
              node _imm_T_4 = bits(io.inst_i, 15, 0) @[Id.scala 203:43]
              node _imm_T_5 = cat(UInt<16>("h0"), _imm_T_4) @[Cat.scala 33:92]
              imm <= _imm_T_5 @[Id.scala 203:13]
              node _wd_or_T_3 = bits(io.inst_i, 20, 16) @[Id.scala 204:27]
              wd_or <= _wd_or_T_3 @[Id.scala 204:15]
              instvalid <= UInt<1>("h0") @[Id.scala 205:19]
            else :
              node _T_15 = eq(UInt<6>("hf"), op) @[Id.scala 97:16]
              when _T_15 : @[Id.scala 97:16]
                wreg_or <= UInt<1>("h1") @[Id.scala 208:17]
                aluop_or <= UInt<8>("h25") @[Id.scala 209:18]
                alusel_or <= UInt<3>("h1") @[Id.scala 210:19]
                reg1_read_or <= UInt<1>("h1") @[Id.scala 211:22]
                reg2_read_or <= UInt<1>("h0") @[Id.scala 212:22]
                node _imm_T_6 = bits(io.inst_i, 15, 0) @[Id.scala 213:29]
                node _imm_T_7 = cat(_imm_T_6, UInt<16>("h0")) @[Cat.scala 33:92]
                imm <= _imm_T_7 @[Id.scala 213:13]
                node _wd_or_T_4 = bits(io.inst_i, 20, 16) @[Id.scala 214:27]
                wd_or <= _wd_or_T_4 @[Id.scala 214:15]
                instvalid <= UInt<1>("h0") @[Id.scala 215:19]
              else :
                node _T_16 = eq(UInt<6>("h33"), op) @[Id.scala 97:16]
                when _T_16 : @[Id.scala 97:16]
                  wreg_or <= UInt<1>("h1") @[Id.scala 218:17]
                  aluop_or <= UInt<8>("h0") @[Id.scala 219:18]
                  alusel_or <= UInt<3>("h0") @[Id.scala 220:19]
                  reg1_read_or <= UInt<1>("h0") @[Id.scala 221:22]
                  reg2_read_or <= UInt<1>("h0") @[Id.scala 222:22]
                  instvalid <= UInt<1>("h0") @[Id.scala 223:19]
      node _T_17 = bits(io.inst_i, 31, 21) @[Id.scala 226:19]
      node _T_18 = eq(_T_17, UInt<1>("h0")) @[Id.scala 226:28]
      when _T_18 : @[Id.scala 226:50]
        node _T_19 = eq(op3, UInt<6>("h0")) @[Id.scala 227:16]
        when _T_19 : @[Id.scala 227:29]
          wreg_or <= UInt<1>("h1") @[Id.scala 228:17]
          aluop_or <= UInt<8>("h7c") @[Id.scala 229:18]
          alusel_or <= UInt<3>("h2") @[Id.scala 230:19]
          reg1_read_or <= UInt<1>("h0") @[Id.scala 231:22]
          reg2_read_or <= UInt<1>("h1") @[Id.scala 232:22]
          node _imm_T_8 = bits(io.inst_i, 10, 6) @[Id.scala 233:25]
          imm <= _imm_T_8 @[Id.scala 233:13]
          node _wd_or_T_5 = bits(io.inst_i, 15, 11) @[Id.scala 234:27]
          wd_or <= _wd_or_T_5 @[Id.scala 234:15]
          instvalid <= UInt<1>("h0") @[Id.scala 235:19]
        else :
          node _T_20 = eq(op3, UInt<6>("h2")) @[Id.scala 236:22]
          when _T_20 : @[Id.scala 236:35]
            wreg_or <= UInt<1>("h1") @[Id.scala 237:17]
            aluop_or <= UInt<8>("h2") @[Id.scala 238:18]
            alusel_or <= UInt<3>("h2") @[Id.scala 239:19]
            reg1_read_or <= UInt<1>("h0") @[Id.scala 240:22]
            reg2_read_or <= UInt<1>("h1") @[Id.scala 241:22]
            node _imm_T_9 = bits(io.inst_i, 10, 6) @[Id.scala 242:25]
            imm <= _imm_T_9 @[Id.scala 242:13]
            node _wd_or_T_6 = bits(io.inst_i, 15, 11) @[Id.scala 243:27]
            wd_or <= _wd_or_T_6 @[Id.scala 243:15]
            instvalid <= UInt<1>("h0") @[Id.scala 244:19]
          else :
            node _T_21 = eq(op3, UInt<6>("h3")) @[Id.scala 245:22]
            when _T_21 : @[Id.scala 245:35]
              wreg_or <= UInt<1>("h1") @[Id.scala 246:17]
              aluop_or <= UInt<8>("h3") @[Id.scala 247:18]
              alusel_or <= UInt<3>("h2") @[Id.scala 248:19]
              reg1_read_or <= UInt<1>("h0") @[Id.scala 249:22]
              reg2_read_or <= UInt<1>("h1") @[Id.scala 250:22]
              node _imm_T_10 = bits(io.inst_i, 10, 6) @[Id.scala 251:25]
              imm <= _imm_T_10 @[Id.scala 251:13]
              node _wd_or_T_7 = bits(io.inst_i, 15, 11) @[Id.scala 252:27]
              wd_or <= _wd_or_T_7 @[Id.scala 252:15]
              instvalid <= UInt<1>("h0") @[Id.scala 253:19]
    node _T_22 = asUInt(reset) @[Id.scala 259:14]
    node _T_23 = eq(_T_22, UInt<1>("h1")) @[Id.scala 259:21]
    when _T_23 : @[Id.scala 259:36]
      reg1_or <= UInt<32>("h0") @[Id.scala 260:13]
    else :
      node _T_24 = eq(reg1_read_or, UInt<1>("h1")) @[Id.scala 261:27]
      when _T_24 : @[Id.scala 261:39]
        reg1_or <= io.reg1_data_i @[Id.scala 262:13]
      else :
        node _T_25 = eq(reg1_read_or, UInt<1>("h0")) @[Id.scala 263:27]
        when _T_25 : @[Id.scala 263:39]
          reg1_or <= imm @[Id.scala 264:13]
        else :
          reg1_or <= UInt<32>("h0") @[Id.scala 266:13]
    node _T_26 = asUInt(reset) @[Id.scala 270:14]
    node _T_27 = eq(_T_26, UInt<1>("h1")) @[Id.scala 270:21]
    when _T_27 : @[Id.scala 270:36]
      reg2_or <= UInt<32>("h0") @[Id.scala 271:13]
    else :
      node _T_28 = eq(reg2_read_or, UInt<1>("h1")) @[Id.scala 272:27]
      when _T_28 : @[Id.scala 272:39]
        reg2_or <= io.reg2_data_i @[Id.scala 273:13]
      else :
        node _T_29 = eq(reg2_read_or, UInt<1>("h0")) @[Id.scala 274:27]
        when _T_29 : @[Id.scala 274:39]
          reg2_or <= imm @[Id.scala 275:13]
        else :
          reg2_or <= UInt<32>("h0") @[Id.scala 277:13]

  module Regfile :
    input clock : Clock
    input reset : Reset
    output io : { flip we : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<32>, flip re1 : UInt<1>, flip raddr1 : UInt<5>, flip re2 : UInt<1>, flip raddr2 : UInt<5>, rdata1 : UInt<32>, rdata2 : UInt<32>}

    reg rdata1r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), rdata1r) @[Regfile.scala 22:20]
    reg rdata2r : UInt<32>, clock with :
      reset => (UInt<1>("h0"), rdata2r) @[Regfile.scala 23:20]
    io.rdata1 <= rdata1r @[Regfile.scala 25:13]
    io.rdata2 <= rdata2r @[Regfile.scala 26:13]
    wire _regs_WIRE : UInt<32>[32] @[Regfile.scala 29:29]
    _regs_WIRE[0] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[1] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[2] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[3] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[4] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[5] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[6] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[7] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[8] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[9] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[10] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[11] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[12] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[13] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[14] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[15] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[16] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[17] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[18] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[19] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[20] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[21] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[22] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[23] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[24] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[25] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[26] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[27] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[28] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[29] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[30] <= UInt<32>("h0") @[Regfile.scala 29:29]
    _regs_WIRE[31] <= UInt<32>("h0") @[Regfile.scala 29:29]
    reg regs : UInt<32>[32], clock with :
      reset => (reset, _regs_WIRE) @[Regfile.scala 29:21]
    node _T = asUInt(reset) @[Regfile.scala 31:14]
    node _T_1 = eq(_T, UInt<1>("h0")) @[Regfile.scala 31:21]
    when _T_1 : @[Regfile.scala 31:37]
      node _T_2 = eq(io.we, UInt<1>("h1")) @[Regfile.scala 32:16]
      node _T_3 = neq(io.waddr, UInt<1>("h0")) @[Regfile.scala 32:44]
      node _T_4 = and(_T_2, _T_3) @[Regfile.scala 32:32]
      when _T_4 : @[Regfile.scala 32:53]
        regs[io.waddr] <= io.wdata @[Regfile.scala 33:22]
    node _T_5 = asUInt(reset) @[Regfile.scala 36:14]
    node _T_6 = eq(_T_5, UInt<1>("h0")) @[Regfile.scala 36:21]
    when _T_6 : @[Regfile.scala 36:37]
      rdata1r <= UInt<32>("h0") @[Regfile.scala 37:13]
    else :
      node _T_7 = eq(io.raddr1, UInt<1>("h0")) @[Regfile.scala 38:24]
      when _T_7 : @[Regfile.scala 38:33]
        rdata1r <= UInt<32>("h0") @[Regfile.scala 39:13]
      else :
        node _T_8 = eq(io.re1, UInt<1>("h1")) @[Regfile.scala 40:21]
        when _T_8 : @[Regfile.scala 40:37]
          rdata1r <= regs[io.raddr1] @[Regfile.scala 41:13]
        else :
          rdata1r <= UInt<32>("h0") @[Regfile.scala 43:13]
    node _T_9 = asUInt(reset) @[Regfile.scala 46:14]
    node _T_10 = eq(_T_9, UInt<1>("h1")) @[Regfile.scala 46:21]
    when _T_10 : @[Regfile.scala 46:36]
      rdata2r <= UInt<32>("h0") @[Regfile.scala 47:13]
    else :
      node _T_11 = eq(io.raddr2, UInt<1>("h0")) @[Regfile.scala 48:24]
      when _T_11 : @[Regfile.scala 48:33]
        rdata2r <= UInt<32>("h0") @[Regfile.scala 49:13]
      else :
        node _T_12 = eq(io.re2, UInt<1>("h1")) @[Regfile.scala 50:21]
        when _T_12 : @[Regfile.scala 50:37]
          rdata2r <= regs[io.raddr2] @[Regfile.scala 51:13]
        else :
          rdata2r <= UInt<32>("h0") @[Regfile.scala 53:13]

  module Ex :
    input clock : Clock
    input reset : Reset
    output io : { flip aluop_i : UInt<8>, flip alusel_i : UInt<3>, flip reg1_i : UInt<32>, flip reg2_i : UInt<32>, flip wd_i : UInt<5>, flip wreg_i : UInt<1>, wd_o : UInt<5>, wreg_o : UInt<1>, wdata_o : UInt<32>}

    reg wd_or : UInt<5>, clock with :
      reset => (UInt<1>("h0"), wd_or) @[Ex.scala 24:18]
    reg wreg_or : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wreg_or) @[Ex.scala 25:20]
    reg wdata_or : UInt<32>, clock with :
      reset => (UInt<1>("h0"), wdata_or) @[Ex.scala 26:21]
    io.wd_o <= wd_or @[Ex.scala 28:11]
    io.wreg_o <= wreg_or @[Ex.scala 29:13]
    io.wdata_o <= wdata_or @[Ex.scala 30:14]
    reg logicout : UInt<32>, clock with :
      reset => (UInt<1>("h0"), logicout) @[Ex.scala 33:21]
    reg shiftres : UInt<32>, clock with :
      reset => (UInt<1>("h0"), shiftres) @[Ex.scala 34:21]
    node _T = asUInt(reset) @[Ex.scala 39:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Ex.scala 39:21]
    when _T_1 : @[Ex.scala 39:36]
      logicout <= UInt<32>("h0") @[Ex.scala 40:14]
    else :
      logicout <= UInt<32>("h0") @[Ex.scala 42:14]
      node _T_2 = eq(UInt<8>("h25"), io.aluop_i) @[Ex.scala 43:24]
      when _T_2 : @[Ex.scala 43:24]
        node _logicout_T = or(io.reg1_i, io.reg2_i) @[Ex.scala 45:31]
        logicout <= _logicout_T @[Ex.scala 45:18]
      else :
        node _T_3 = eq(UInt<8>("h24"), io.aluop_i) @[Ex.scala 43:24]
        when _T_3 : @[Ex.scala 43:24]
          node _logicout_T_1 = and(io.reg1_i, io.reg2_i) @[Ex.scala 48:31]
          logicout <= _logicout_T_1 @[Ex.scala 48:18]
        else :
          node _T_4 = eq(UInt<8>("h27"), io.aluop_i) @[Ex.scala 43:24]
          when _T_4 : @[Ex.scala 43:24]
            node _logicout_T_2 = or(io.reg1_i, io.reg2_i) @[Ex.scala 51:33]
            node _logicout_T_3 = not(_logicout_T_2) @[Ex.scala 51:21]
            logicout <= _logicout_T_3 @[Ex.scala 51:18]
          else :
            node _T_5 = eq(UInt<8>("h26"), io.aluop_i) @[Ex.scala 43:24]
            when _T_5 : @[Ex.scala 43:24]
              node _logicout_T_4 = xor(io.reg1_i, io.reg2_i) @[Ex.scala 54:31]
              logicout <= _logicout_T_4 @[Ex.scala 54:18]
    node _T_6 = asUInt(reset) @[Ex.scala 60:14]
    node _T_7 = eq(_T_6, UInt<1>("h1")) @[Ex.scala 60:21]
    when _T_7 : @[Ex.scala 60:36]
      shiftres <= UInt<32>("h0") @[Ex.scala 61:14]
    else :
      shiftres <= UInt<32>("h0") @[Ex.scala 63:14]
      node _T_8 = eq(UInt<8>("h7c"), io.aluop_i) @[Ex.scala 64:24]
      when _T_8 : @[Ex.scala 64:24]
        node _shiftres_T = bits(io.reg1_i, 4, 0) @[Ex.scala 66:43]
        node _shiftres_T_1 = dshl(io.reg2_i, _shiftres_T) @[Ex.scala 66:31]
        shiftres <= _shiftres_T_1 @[Ex.scala 66:18]
      else :
        node _T_9 = eq(UInt<8>("h2"), io.aluop_i) @[Ex.scala 64:24]
        when _T_9 : @[Ex.scala 64:24]
          node _shiftres_T_2 = bits(io.reg1_i, 4, 0) @[Ex.scala 69:43]
          node _shiftres_T_3 = dshr(io.reg2_i, _shiftres_T_2) @[Ex.scala 69:31]
          shiftres <= _shiftres_T_3 @[Ex.scala 69:18]
        else :
          node _T_10 = eq(UInt<8>("h3"), io.aluop_i) @[Ex.scala 64:24]
          when _T_10 : @[Ex.scala 64:24]
            node _shiftres_T_4 = asSInt(io.reg2_i) @[Ex.scala 72:32]
            node _shiftres_T_5 = bits(io.reg1_i, 4, 0) @[Ex.scala 72:51]
            node _shiftres_T_6 = dshr(_shiftres_T_4, _shiftres_T_5) @[Ex.scala 72:39]
            node _shiftres_T_7 = asUInt(_shiftres_T_6) @[Ex.scala 72:59]
            shiftres <= _shiftres_T_7 @[Ex.scala 72:18]
    wd_or <= io.wd_i @[Ex.scala 77:9]
    wreg_or <= io.wreg_i @[Ex.scala 78:11]
    wdata_or <= UInt<32>("h0") @[Ex.scala 80:12]
    node _T_11 = eq(UInt<3>("h1"), io.alusel_i) @[Ex.scala 81:23]
    when _T_11 : @[Ex.scala 81:23]
      wdata_or <= logicout @[Ex.scala 82:34]
    else :
      node _T_12 = eq(UInt<3>("h2"), io.alusel_i) @[Ex.scala 81:23]
      when _T_12 : @[Ex.scala 81:23]
        wdata_or <= shiftres @[Ex.scala 83:34]

  module Wb :
    input clock : Clock
    input reset : Reset
    output io : { flip ex_wd : UInt<5>, flip ex_wreg : UInt<1>, flip ex_wdata : UInt<32>, wb_wd : UInt<5>, wb_wreg : UInt<1>, wb_wdata : UInt<32>}

    reg wb_wregr : UInt<1>, clock with :
      reset => (UInt<1>("h0"), wb_wregr) @[Wb.scala 20:21]
    io.wb_wreg <= wb_wregr @[Wb.scala 21:14]
    node _T = asUInt(reset) @[Wb.scala 23:14]
    node _T_1 = eq(_T, UInt<1>("h1")) @[Wb.scala 23:21]
    when _T_1 : @[Wb.scala 23:36]
      io.wb_wd <= UInt<5>("h0") @[Wb.scala 24:14]
      wb_wregr <= UInt<1>("h0") @[Wb.scala 25:14]
      io.wb_wdata <= UInt<32>("h0") @[Wb.scala 26:17]
    else :
      io.wb_wd <= io.ex_wd @[Wb.scala 28:14]
      wb_wregr <= io.ex_wreg @[Wb.scala 29:14]
      io.wb_wdata <= io.ex_wdata @[Wb.scala 30:17]

  module OpenMips :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip rom_data_i : UInt<32>, rom_addr_o : UInt<32>, rom_ce_o : UInt<1>}

    wire id_aluop : UInt<8> @[OpenMips.scala 15:22]
    wire id_alusel : UInt<3> @[OpenMips.scala 16:23]
    wire id_reg1 : UInt<32> @[OpenMips.scala 17:21]
    wire id_reg2 : UInt<32> @[OpenMips.scala 18:21]
    wire id_wreg : UInt<1> @[OpenMips.scala 19:21]
    wire id_wd : UInt<5> @[OpenMips.scala 20:19]
    wire reg1_read : UInt<1> @[OpenMips.scala 22:23]
    wire reg2_read : UInt<1> @[OpenMips.scala 23:23]
    wire reg1_data : UInt<32> @[OpenMips.scala 24:23]
    wire reg2_data : UInt<32> @[OpenMips.scala 25:23]
    wire reg1_addr : UInt<5> @[OpenMips.scala 26:23]
    wire reg2_addr : UInt<5> @[OpenMips.scala 27:23]
    wire ex_wreg : UInt<1> @[OpenMips.scala 29:21]
    wire ex_wd : UInt<5> @[OpenMips.scala 30:19]
    wire ex_wdata : UInt<32> @[OpenMips.scala 31:22]
    wire wb_wd : UInt<5> @[OpenMips.scala 33:19]
    wire wb_wreg : UInt<1> @[OpenMips.scala 34:21]
    wire wb_wdata : UInt<32> @[OpenMips.scala 35:22]
    inst pc_reg0 of PC_reg @[OpenMips.scala 38:23]
    pc_reg0.clock <= clock
    pc_reg0.reset <= reset
    io.rom_addr_o <= pc_reg0.io.pc @[OpenMips.scala 39:17]
    io.rom_ce_o <= pc_reg0.io.ce @[OpenMips.scala 40:15]
    inst id0 of Id @[OpenMips.scala 43:19]
    id0.clock <= clock
    id0.reset <= reset
    id0.io.pc_i <= io.rom_addr_o @[OpenMips.scala 44:15]
    id0.io.inst_i <= io.rom_data_i @[OpenMips.scala 45:17]
    id0.io.reg1_data_i <= reg1_data @[OpenMips.scala 47:22]
    id0.io.reg2_data_i <= reg2_data @[OpenMips.scala 48:22]
    reg1_read <= id0.io.reg1_read_o @[OpenMips.scala 50:13]
    reg2_read <= id0.io.reg2_read_o @[OpenMips.scala 51:13]
    reg1_addr <= id0.io.reg1_addr_o @[OpenMips.scala 52:13]
    reg2_addr <= id0.io.reg2_addr_o @[OpenMips.scala 53:13]
    id_aluop <= id0.io.aluop_o @[OpenMips.scala 55:12]
    id_alusel <= id0.io.alusel_o @[OpenMips.scala 56:13]
    id_reg1 <= id0.io.reg1_o @[OpenMips.scala 57:11]
    id_reg2 <= id0.io.reg2_o @[OpenMips.scala 58:11]
    id_wd <= id0.io.wd_o @[OpenMips.scala 59:9]
    id_wreg <= id0.io.wreg_o @[OpenMips.scala 60:11]
    inst regfile1 of Regfile @[OpenMips.scala 63:24]
    regfile1.clock <= clock
    regfile1.reset <= reset
    regfile1.io.we <= wb_wreg @[OpenMips.scala 65:18]
    regfile1.io.waddr <= wb_wd @[OpenMips.scala 66:21]
    regfile1.io.wdata <= wb_wdata @[OpenMips.scala 67:21]
    regfile1.io.re1 <= reg1_read @[OpenMips.scala 68:19]
    regfile1.io.raddr1 <= reg1_addr @[OpenMips.scala 69:22]
    reg1_data <= regfile1.io.rdata1 @[OpenMips.scala 70:13]
    regfile1.io.re2 <= reg2_read @[OpenMips.scala 71:19]
    regfile1.io.raddr2 <= reg2_addr @[OpenMips.scala 72:22]
    reg2_data <= regfile1.io.rdata2 @[OpenMips.scala 73:13]
    inst ex0 of Ex @[OpenMips.scala 75:19]
    ex0.clock <= clock
    ex0.reset <= reset
    ex0.io.aluop_i <= id_aluop @[OpenMips.scala 77:18]
    ex0.io.alusel_i <= id_alusel @[OpenMips.scala 78:19]
    ex0.io.reg1_i <= id_reg1 @[OpenMips.scala 79:17]
    ex0.io.reg2_i <= id_reg2 @[OpenMips.scala 80:17]
    ex0.io.wd_i <= id_wd @[OpenMips.scala 81:15]
    ex0.io.wreg_i <= id_wreg @[OpenMips.scala 82:17]
    ex_wd <= ex0.io.wd_o @[OpenMips.scala 84:9]
    ex_wreg <= ex0.io.wreg_o @[OpenMips.scala 85:11]
    ex_wdata <= ex0.io.wdata_o @[OpenMips.scala 86:12]
    inst wb0 of Wb @[OpenMips.scala 88:19]
    wb0.clock <= clock
    wb0.reset <= reset
    wb0.io.ex_wd <= ex_wd @[OpenMips.scala 90:16]
    wb0.io.ex_wreg <= ex_wreg @[OpenMips.scala 91:18]
    wb0.io.ex_wdata <= ex_wdata @[OpenMips.scala 92:19]
    wb_wd <= wb0.io.wb_wd @[OpenMips.scala 94:9]
    wb_wreg <= wb0.io.wb_wreg @[OpenMips.scala 95:11]
    wb_wdata <= wb0.io.wb_wdata @[OpenMips.scala 96:12]

